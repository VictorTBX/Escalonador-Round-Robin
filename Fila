package roundrobin;

public class Fila {

    private PID elementos[];
    private int inicio, fim;

    public Fila(int tamanhoMaximo) {
        elementos = new PID[tamanhoMaximo];
        inicio = fim = - 1;
    }

    public boolean isEmpty() {
        return inicio == -1 ? true : false;
    }

    public boolean isFull() {
        return elementos.length - 1 == fim ? true : false;
    }

    public int size() {
        return fim + 1;
    }

    public PID front() {
        if (isEmpty()) {
            System.out.println("Vazia");
            return null;
        } else {
            return elementos[inicio];
        }

    }

    public void imprimir() {
        for (int i = inicio; i <= fim; i++) {
            System.out.print(elementos[i].nome + "(" + elementos[i].duracao + ")   ");
        }
        System.out.println("");
    }

    public void enqueue(PID elemento) {
        if (isFull()) {
            //System.out.println("EstÃ¡ cheio!");
        } else {
            if (size() == 0) {
                inicio++;
            }
            fim++;
            elementos[fim] = elemento;
        }
    }

    public PID dequeue() {
        if (isEmpty()) {
            System.out.println("Vazia");
            return null;
        } else if (size() == 1) {
            PID valor = elementos[inicio];
            inicio = fim = -1;
            return valor;
        } else {
            PID valor = elementos[inicio];
            for (int i = inicio; i < fim; i++) {
                elementos[i] = elementos[i + 1];
            }
            fim--;
            return valor;
        }
    }

    public void add() {
        if (!(isEmpty())) {
            for (int i = inicio; i <= fim; i++) {
                elementos[i].tempomedio++;
            }
        }

    }
}
