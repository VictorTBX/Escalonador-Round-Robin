
package roundrobin;

import java.util.Arrays;
import sun.misc.Sort;


public class Operacoes {
    
    private int elementos[];
    private int inicio, fim;
 
    public Operacoes(int tamanhoMaximo) {
        elementos = new int[tamanhoMaximo];
        inicio = fim = - 1;
    }
 
    public boolean isEmpty() {
        return inicio == -1 ? true : false;
    }
 
    public boolean isFull() {
        return elementos.length - 1 == fim ? true : false;
    }
 
    public int size() {
        return fim + 1;
    }
 
    public int front() {
        if (isEmpty()) {
            return -1;
        } else {
            return elementos[inicio];
        }
 
    }
 
    public void imprimir() {
        if (size() == 0) {
            System.out.print("");
        }
        for (int i = inicio; i <= fim; i++) {
            System.out.print(elementos[i]+ "   ");
        }
        System.out.println("");
    }
 
    public void enqueue(int elemento) {
        if (isFull()) {
            //System.out.println("EstÃ¡ cheio!");
        } else {
            if (size() == 0) {
                inicio++;
            }
            fim++;
            elementos[fim] = elemento;            
        }
    }
 
    public int dequeue() {
        if (isEmpty()) {
            System.out.println("Vazia");
            return -1;
        } else if (size() == 1) {
            int valor = elementos[inicio];
            inicio = fim = -1;
            return valor;
        } else {
            int valor = elementos[inicio];
            for (int i = inicio; i < fim; i++) {
                elementos[i] = elementos[i + 1];
            }
            fim--;            
            return valor;
        }
    }
    
    public void ordenar() {
        Arrays.sort(elementos);
    }
    
}
